version: '3.8'

services:
  # Market Runner Service
  runner:
    build:
      context: ../../
      dockerfile: packages/runner/Dockerfile
      target: development
    ports:
      - "3000:3000"  # Main service
      - "3001:3001"  # Health check
      - "3002:3002"  # Metrics
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - DATABASE_URL=postgresql://runner:runner_password@postgres:5432/runner_db
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    volumes:
      - ../../packages/runner:/app/packages/runner
      - ../../packages/shared:/app/packages/shared
      - /app/packages/runner/node_modules  # Anonymous volume for node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - runner-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: runner_db
      POSTGRES_USER: runner
      POSTGRES_PASSWORD: runner_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U runner -d runner_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - runner-network
    restart: unless-stopped

  # Redis for Job Queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis.conf:/etc/redis/redis.conf:ro
    command: ["redis-server", "/etc/redis/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - runner-network
    restart: unless-stopped

  # Redis Commander (Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: local:redis:6379
      HTTP_USER: admin
      HTTP_PASSWORD: admin
    ports:
      - "8082:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - runner-network
    restart: unless-stopped
    profiles:
      - tools

  # pgAdmin (PostgreSQL GUI)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@runner.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - runner-network
    restart: unless-stopped
    profiles:
      - tools

networks:
  runner-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local